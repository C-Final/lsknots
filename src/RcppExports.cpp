// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// knots_ols
Rcpp::List knots_ols(arma::vec Y, arma::mat X, arma::vec tau_iter);
RcppExport SEXP _lsknots_knots_ols(SEXP YSEXP, SEXP XSEXP, SEXP tau_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_iter(tau_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(knots_ols(Y, X, tau_iter));
    return rcpp_result_gen;
END_RCPP
}
// knots_find
arma::vec knots_find(arma::vec Y, arma::mat X, arma::vec tau_iter, double epsilon);
RcppExport SEXP _lsknots_knots_find(SEXP YSEXP, SEXP XSEXP, SEXP tau_iterSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_iter(tau_iterSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(knots_find(Y, X, tau_iter, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// knots_sd
arma::vec knots_sd(arma::vec y, arma::vec X, arma::mat Z, arma::vec tau_out);
RcppExport SEXP _lsknots_knots_sd(SEXP ySEXP, SEXP XSEXP, SEXP ZSEXP, SEXP tau_outSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_out(tau_outSEXP);
    rcpp_result_gen = Rcpp::wrap(knots_sd(y, X, Z, tau_out));
    return rcpp_result_gen;
END_RCPP
}
// interval
Rcpp::List interval(double quantile, arma::vec tau_out, arma::vec sd_out);
RcppExport SEXP _lsknots_interval(SEXP quantileSEXP, SEXP tau_outSEXP, SEXP sd_outSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type quantile(quantileSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_out(tau_outSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sd_out(sd_outSEXP);
    rcpp_result_gen = Rcpp::wrap(interval(quantile, tau_out, sd_out));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lsknots_knots_ols", (DL_FUNC) &_lsknots_knots_ols, 3},
    {"_lsknots_knots_find", (DL_FUNC) &_lsknots_knots_find, 4},
    {"_lsknots_knots_sd", (DL_FUNC) &_lsknots_knots_sd, 4},
    {"_lsknots_interval", (DL_FUNC) &_lsknots_interval, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_lsknots(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
